provider "aws" {
  region = "us-west-2"  # Change to your desired region
}

data "aws_eks_cluster" "example" {
  name = "your-eks-cluster-name"  # Replace with your EKS cluster name
}

data "aws_eks_cluster_auth" "example" {
  name = data.aws_eks_cluster.example.name
}

resource "aws_iam_role" "k8s_s3_access" {
  name = "k8s-s3-access-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "${data.aws_eks_cluster.example.identity[0].oidc[0].issuer}"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "${data.aws_eks_cluster.example.identity[0].oidc[0].issuer}:sub": "system:serviceaccount:your-namespace:your-service-account"  # Update with your namespace and service account
        }
      }
    }
  ]
}
EOF
}

resource "aws_iam_policy" "s3_access" {
  name        = "s3-access-policy"
  description = "Policy to allow access to S3 bucket"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:ListBucket",
        "s3:GetObject",
        "s3:PutObject"
      ],
      "Resource": [
        "arn:aws:s3:::your-bucket-name",  # Replace with your S3 bucket name
        "arn:aws:s3:::your-bucket-name/*"
      ]
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "s3_access_attachment" {
  policy_arn = aws_iam_policy.s3_access.arn
  role       = aws_iam_role.k8s_s3_access.name
}

resource "kubernetes_service_account" "example" {
  metadata {
    name      = "your-service-account"  # Replace with your service account name
    namespace = "your-namespace"        # Replace with your namespace
    annotations = {
      "eks.amazonaws.com/role-arn" = aws_iam_role.k8s_s3_access.arn
    }
  }
}